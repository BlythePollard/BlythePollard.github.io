---
layout: post
title:      "Rails/Javascript Final Project: Takeaways & Thoughts"
date:       2020-04-10 19:37:58 -0400
permalink:  rails_javascript_final_project_takeaways_and_thoughts
---


As I finish up my Rails/Javascript final project, I'd like to write down a few takeaways and realizations that I had along the way. This project was different from my others so far in that I do not feel that I am walking away with anything close to expertise. Learning Javascript has been difficult and eye-opening; every turn I take or new thing I learn, the more I see that I have to learn. It is clear to me that Javascript is a vast language with so many different capabilities and ways to do things, and I am confident that I have just barely brushed the surface. 

That said, it has been extremely satisfying to learn how to manipulate a DOM, render data, and see my results play out in real time. Javascript is fun! But it also feels chaotic. I was talking to a coworker about my feelings of inadequacy in my learning, how little I feel that I know and how overwhelming it seems, and he made a great point. He reminded me that I moved into to Javascript from Rails, an opinionated framework that is much less vast and open-ended than a general language. This wasn't something I had thought about before, but it did make me think back to learning the Ruby and OO Ruby fundamentals at the beginning of the program. I had forgotten in time, but thinking back, I remember how *incredibly* challenging it was to learn the language itself. From there, I moved into frameworks and specific usages within the language that essentially bottlenecked my necessary knowledge base, so moving back into Javascript and the vast sea that is a language in itself, of course I was thrown for a loop. 

This differentiation between a language and a framework was something that I hadn't really considered, and I am so glad that I have this perspective. It allowed me to take a step back and realize that I have learned Ruby and Javascript, and I have learned frameworks built upon Ruby and will soon be learning frameworks built upon Javascript, but at the base of it all is the language itself. To master Rails or Sinatra (or, I would imagine, React or Redux), I need to master the languages behind them as well. And the better I know the languages, the more freedom, maneuverability, and fun I will have when working with their frameworks. Which leads me to another takeaway...

I need to study Javascript better. I realize that just because I made a successful application certainly does not mean that I have a comprehensive grasp on the fundamentals of the language. Sure, I've got the basics down, but I didn't use many of the learnings in this section within my project, so it's up to me to solidify those learnings before moving on to more advanced material. Between submitting my project and completing the assessment, I am going to spend my time going over the Javascript section in more detail, taking more notes and polishing the notes I've taken, and practicing the concepts more deeply. I don't want to inhibit my future learning by rushing past the fundamentals. 

Finally, my last takeaway. My final project is not, by any means, anything revolutionary. It is simple and built to satisfy the project requirements. Because of my own time constraints in this program, I have needed to learn to balance high expectations with the reality of forward movement. I have quite a few stretch goals for this project, including adding a user class and sign-in, enabling pagination, and using CSS to allow another area to save lasting reflections taken from the day's data. I do plan to do these things- upon completing the program, I plan to go back into each of my final projects to refactor and add stretch goals and additional features that I would like to learn or am proud of. I look forward to doing this and think it will be very fun to revisit and improve on my accomplishments. But for now, onward!
